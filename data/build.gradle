plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
}


android {
    namespace 'com.ahmedmhassaan.data'
    compileSdk 33

    defaultConfig {
        minSdk 21

        multiDexEnabled true
        testInstrumentationRunner "com.ahmedmhassaan.data.HiltTestRunner"
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        Properties properties = new Properties();
        File file = project.rootProject.file("local.properties");
        properties.load(new FileInputStream(file))
        String API_KEY = properties.getProperty("APK_KEY", "")

//        val properites = Properties()
//        val file = project.rootProject.file("local.properties")
//        properites.load(FileInputStream(file))
//        val API_KEY: String ? = properites.getProperty("APK_KEY", "")
        buildConfigField("String", "KEY", "\"$API_KEY\"")
        System.out.println("Key is $API_KEY")


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    kapt {
        correctErrorTypes true
    }

}

dependencies {

    implementation project(path: ':domain')
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'

    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0' // Retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0' // Gson Converter
    implementation 'com.google.code.gson:gson:2.10.1'  // gson
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.11'
    // Retrofit logging intercept

    implementation "com.google.dagger:hilt-android:2.47" // for hilt di
    kapt "com.google.dagger:hilt-compiler:2.47" // hilt di

    def room_version = '2.5.2'   // for room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version" // room
    kapt "androidx.room:room-compiler:$room_version" // room compiler


    def paging_version = "3.2.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"


    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation 'com.google.truth:truth:1.1.4'
    testImplementation 'com.google.dagger:hilt-android-testing:2.47'
    testImplementation("androidx.paging:paging-common-ktx:$paging_version")
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
//    testImplementation("com.squareup.okhttp3:mockwebserver:4.7.2") // retrofit test
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")
    testImplementation("com.squareup.okhttp3:okhttp:4.9.0")


    kaptTest 'com.google.dagger:hilt-android-compiler:2.47'
    testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.47'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.47'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.47'


    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'com.google.truth:truth:1.1.4'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.47'
    androidTestImplementation("androidx.paging:paging-common-ktx:$paging_version")
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")
//    androidTestImplementation("com.squareup.okhttp3:mockwebserver:4.7.2") // retrofit test
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")
    androidTestImplementation("com.squareup.okhttp3:okhttp:4.9.0")
    androidTestImplementation("org.mockito:mockito-core:2.25.0")


}